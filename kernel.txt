ADDSP3 R0 0x0000
ADDSP3 R0 0x0000
NOP

;保存用户程序寄存器的地址 
;0xBF10  0xBF11 BF12 0xBF13 BF14 0xBF15
; R0    R1   R2   R3   R4   R5  

B START
NOP

DELINT:   ;中断处理程序
	NOP
	NOP
	NOP
	;保存用户程序现场
	LI R6 0xBF
	SLL R6 R6 0x0000
	ADDIU R6 0x10					;R6=0xBF10
	SW R6 R0 0x0000
	SW R6 R1 0x0001
	SW R6 R2 0x0002
	

	

	
	;R1=中断号
	LW_SP R1 0x0000
	ADDSP 0x0001
	LI R0 0x00FF
	AND R1 R0
	
	;R2=应用程序的pc
	LW_SP R2 0x0000
	ADDSP 0x0001

	;保存r3
	ADDSP 0xFFFF
	SW_SP R3 0x0000


	
	;保存用户程序返回地址
	ADDSP 0xFFFF
	SW_SP R7 0x0000


LI R6 0X0010
CMP R6 R1
BTEQZ OUTBREAK
LI R6 0X00BF
SLL R6 R6 0X0000
ADDIU R6 0X0006


LI R1 0X000A
SW R6 R1 0X0000

LI R1 0X000D
SW R6 R1 0X0000


LI R1 0X0049
SW R6 R1 0X0000

LI R1 0X004E
SW R6 R1 0X0000

LI R1 0X0053
SW R6 R1 0X0000

LI R1 0X0054
SW R6 R1 0X0000

LI R1 0X0052
SW R6 R1 0X0000

LI R1 0X0055
SW R6 R1 0X0000

LI R1 0X0043
SW R6 R1 0X0000

LI R1 0X0054
SW R6 R1 0X0000

LI R1 0X0049
SW R6 R1 0X0000

LI R1 0X004F
SW R6 R1 0X0000

LI R1 0X004E
SW R6 R1 0X0000

LI R1 0X0020
SW R6 R1 0X0000

LI R1 0X0049
SW R6 R1 0X0000

LI R1 0X004E
SW R6 R1 0X0000

LI R1 0X0054
SW R6 R1 0X0000

LI R1 0X000A
SW R6 R1 0X0000

LI R1 0X000D
SW R6 R1 0X0000

RECOVERY:
	
	
	
	;R6保存返回地址
	ADDIU3 R2 R6 0x0000
	
	;用r3=IH（高位变成1）
	MFIH R3
	LI R0 0x0080
	SLL R0 R0 0x000
	OR R3 R0
	
	;恢复现场
	LI R7 0xBF
	SLL R7 R7 0x0000
	ADDIU R7 0x10					;R7=0xBF10
	LW R7 R0 0x0000
	LW R7 R1 0x0001
	LW R7 R2 0x0002
	
	;r7=用户程序返回地址
	LW_SP R7 0x0000
	
	ADDSP 0x0001
	ADDSP 0x0001
	NOP
	MTIH R3
	LW_SP R3 0x00FF
	JR R6
	NOP	

OUTBREAK:

LI R6 0X00BF
SLL R6 R6 0X0000
ADDIU R6 0X0006


LI R1 0X000A
SW R6 R1 0X0000

LI R1 0X000D
SW R6 R1 0X0000

LI R1 0X004F
SW R6 R1 0X0000

LI R1 0X0055
SW R6 R1 0X0000

LI R1 0X0054
SW R6 R1 0X0000

LI R1 0X0020
SW R6 R1 0X0000

LI R1 0X0049
SW R6 R1 0X0000

LI R1 0X004E
SW R6 R1 0X0000

LI R1 0X0054
SW R6 R1 0X0000

LI R1 0X000A
SW R6 R1 0X0000

LI R1 0X000E
SW R6 R1 0X0000


B RECOVERY

NOP
NOP


;init  0x8251
START:
	;初始化IH寄存器，最高位为1时，允许中断，为0时不允许。初始化为0，kernel不允许中断
	LI R0 0x07
	MTIH R0
	;初始化栈地址
	LI R0 0x00BF 
	SLL R0 R0 0x0000
	ADDIU R0 0x10					;R0=0xBF10 
	MTSP R0
	NOP
	
	;用户寄存器值初始化
	LI R6 0x00BF 
	SLL R6 R6 0x0000
	ADDIU R6 0x10					;R6=0xBF10 
	LI R0 0x0000
	SW R6 R0 0x0000
	SW R6 R0 0x0001
	SW R6 R0 0x0002
	SW R6 R0 0x0003
	SW R6 R0 0x0004
	SW R6 R0 0x0005
		
	;WELCOME
	MFPC R7 
	ADDIU R7 0x0003  
	NOP
	B TESTW 	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LI R0 0x004F
	SW R6 R0 0x0006
	NOP
	
	MFPC R7 
	ADDIU R7 0x0003  
	NOP
	B TESTW 	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LI R0 0x004B
	SW R6 R0 0x0006
	NOP
	
	MFPC R7 
	ADDIU R7 0x0003  
	NOP
	B TESTW 	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LI R0 0x000A
	SW R6 R0 0x0006
	NOP
	
	MFPC R7 
	ADDIU R7 0x0003  
	NOP
	B TESTW 	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LI R0 0x000D
	SW R6 R0 0x0006
	NOP
	

	

	

	
BEGIN:          ;检测命令
	

LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X003E
SW R6 R4 0X0006

LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X003E
SW R6 R4 0X0006




;接收字符，保存到r1
	MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R1 0x0004
	LI R6 0x00ff 
  AND R1 R6 
	NOP	

NOTHING:

	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0006
	

	MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R2 0x0004
	LI R6 0x00ff 
  	AND R2 R6 
	NOP	

LI R0 0X000D
CMP R0 R2
BTNEZ UPDATE 

	;检测是否为R命令		
	LI R0 0x0052
	CMP R0 R1
	BTEQZ SHOWREGS	
	NOP	
	;检测是否为D命令
	LI R0 0x0044
	CMP R0 R1
	BTEQZ GOTOSHOWMEM
	NOP	
	
	;检测是否为A命令
	LI R0 0x0041
	CMP R0 R1
	BTEQZ GOTOASM
	NOP	
	
	;检测是否为U命令
	LI R0 0x0055
	CMP R0 R1
	BTEQZ GOTOSHOWMEM
	NOP	
	;检测是否为G命令
	LI R0 0x0047
	CMP R0 R1
	BTEQZ GOTOCOMPILE
	NOP


LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X000A
SW R6 R4 0X0006

LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X000D
SW R6 R4 0X0006		
	
	B BEGIN
	NOP


UPDATE:
  ADDIU3 R2 R1 0X0000
  B NOTHING
;各处理块的入口

GOTOUASM:
	NOP
	B UASM
	NOP
GOTOASM:
	NOP
	B ASM
	NOP
	
GOTOCOMPILE:
	NOP
	B COMPILE
	NOP
GOTOSHOWMEM:
        NOP
        B SHOWMEM
        NOP

  
	
;测试8251是否能写
TESTW:	
	NOP	 		
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0001 
	AND R0 R6 
	;BEQZ R0 TESTW     ;BF01&1=0 则等待	
	NOP		
	JR R7
	NOP 
	

	
;测试8251是否能读
TESTR:	
	NOP	
	LI R4 0x00BF 
	SLL R4 R4 0x0000 
	ADDIU R4 0x0005 
	LW R4 R0 0x0000 
	LI R4 0x0002
	AND R0 R4 
	BEQZ R0 TESTR   ;BF01&2=0  则等待	
	NOP	
        LI R4 0X0034
        SLL R4 R4 0X0000
DELAY:
        ADDIU R4 0X00FF
        BNEZ R4 DELAY
	JR R7
	NOP 


SHOWREGS:    ;R命令，打印R0-R5
       LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00
        LI R4 0X000A	
	SW R6 R4 0x0006
        
      LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00
        LI R4 0X000D	
	SW R6 R4 0x0006


	LI R1 0x0006  ;R1递减  
	LI R2 0x0006   ;R2不变
	
LOOP:
	LI R0  0x00BF
	SLL R0 R0 0x0000
	ADDIU R0 0x0010
	SUBU R2 R1 R3   ;R2=0,1,2,3
	ADDU R0 R3 R0   ;R0=BF10...
	LW R0 R3 0x0000    ;R3=用户程序的 R0,R1,R2	



	LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00
        LI R4 0X0052	
	SW R6 R4 0x0006	
      

        LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00
        LI R4 0X0030
        ADDU R4 R2 R4
        SUBU R4 R1 R4
	SW R6 R4 0x0006	
          
        LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00
        LI R4 0X003D	
	SW R6 R4 0x0006	
;SEND R3
ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0000
SRA R4 R4 0X0004
LI R5 0X000F
AND R4 R5
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0000
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0004
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006


LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X0020
SW R6 R4 0X0006

LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X0020
SW R6 R4 0X0006


	
	ADDIU R1 0xFFFF
	NOP
	BNEZ R1 LOOP
	NOP	


LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X000A
SW R6 R4 0X0006

LI R6 0X00BF
SLL R6 R6 0X0000
LI R4 0X000D
SW R6 R4 0X0006
	B BEGIN
	NOP
	

GOTOBEGIND:
  NOP
  B BEGIN
  NOP
	
	

	
	
	
SHOWMEM:  ;查看内存	

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0040
SW R0 R6 0X0006

LI R3 0X04
LI R6 0X0000
DCONV:
SLL R6 R6 0X04 ;R6左移1位
MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R1 0X00
LI R2 0X7F
AND R1 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R1 0X0006
LI R2 0X41 
SLTU R1 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R1 0XF9 ;大于A的数先减7
ADDIU R1 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R1 R2
ADDU R6 R1 R6 ;上次的结果加上这次的数
ADDIU R3 0XFF
BNEZ R3 DCONV

;R1存储地址
	ADDIU3 R6 R1 0X0000

MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R2 0x0004
	LI R6 0x00ff 
  AND R2 R6 
	NOP

LI R0 0X0020
CMP R0 R2
BTNEZ GOTOBEGIND	

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0020
SW R0 R6 0X0006



LI R3 0X04
LI R6 0X0000
DCONVNUM:
SLL R6 R6 0X04 ;R6左移1位
MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R4 0X00
LI R2 0X7F
AND R4 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R4 0X0006
LI R2 0X41 
SLTU R4 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R4 0XF9 ;大于A的数先减7
ADDIU R4 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R4 R2
ADDU R6 R4 R6 ;上次的结果加上这次的数
ADDIU R3 0XFF
BNEZ R3 DCONVNUM
;R2保存内存个数
ADDIU3 R6 R2 0X0000


MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R3 0x0004
	LI R6 0x00ff 
  AND R3 R6 
	NOP

LI R0 0X000D
CMP R0 R3
BTNEZ BEGIN



	
		;循环发出	
	
MEMLOOP:		
	
	LW R1 R3 0x0000    ;R3为内存数据	

NOP
NOP
LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R6 0X000D
SW R0 R6 0X0006

LI R6 0X0024
SW R0 R6 0X0006

;SEND R3
ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0000
SRA R4 R4 0X0004
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0000
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0004
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

	
	
	ADDIU R1 0x0001   ;R1=地址加加加
	ADDIU R2 0xFFFF
	NOP
	BNEZ R2 MEMLOOP
	NOP	

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R6 0X000D
SW R0 R6 0X0006

	B BEGIN
	NOP		
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 ;汇编	
ASM:  

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R6 0X000D
SW R0 R6 0X0006

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0040
SW R0 R6 0X0006

LI R3 0X04
LI R6 0X0000
ACONV:
SLL R6 R6 0X04 ;R6左移1位

MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R1 0X00
LI R2 0X7F
AND R1 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R1 0X0006
LI R2 0X41 
SLTU R1 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R1 0XF9 ;大于A的数先减7
ADDIU R1 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R1 R2
ADDU R6 R1 R6 ;上次的结果加上这次的数
;;;;;;

;;;;;


ADDIU R3 0XFF
BNEZ R3 ACONV



	;R1存储地址
ADDIU3 R6 R1 0X0000

MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R3 0x0004
	LI R6 0x00ff 
  AND R3 R6 
	NOP

LI R0 0X0020
CMP R0 R3
BTNEZ GOTOBEGIN	
NOP

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0020
SW R0 R6 0X0006

	
	;检测地址是否合法
	LI R0 0x0000
	CMP R0 R1      
  BTEQZ GOTOBEGIN
	NOP	


LI R3 0X04
LI R6 0X0000
ACONVNUM:
SLL R6 R6 0X04 ;R6左移1位
MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R4 0X00
LI R2 0X7F
AND R4 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R4 0X0006
LI R2 0X41 
SLTU R4 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R4 0XF9 ;大于A的数先减7
ADDIU R4 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R4 R2
ADDU R6 R4 R6 ;上次的结果加上这次的数
ADDIU R3 0XFF
BNEZ R3 ACONVNUM

;R2保存数据
ADDIU3 R6 R2 0X0000
 

MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R3 0x0004
	LI R6 0x00ff 
  AND R3 R6 
	NOP

LI R0 0X000D
CMP R0 R3
BTNEZ GOTOBEGIN	
NOP

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R6 0X000D
SW R0 R6 0X0006

			
	SW R1 R2 0x0000	
	NOP
	
	B ASM
	NOP
	
GOTOBEGIN:
	NOP
	B BEGIN
	NOP
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
GOTOBEGINU:
NOP
  B BEGIN
  NOP	
	
;反汇编：将需要反汇编的地址处的值发给终端处理	
UASM:

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R6 0X000D
SW R0 R6 0X0006

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0040
SW R0 R6 0X0006


LI R3 0X04
LI R6 0X0000
UCONV:
SLL R6 R6 0X04 ;R6左移1位
MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R1 0X00
LI R2 0X7F
AND R1 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R1 0X0006
LI R2 0X41 
SLTU R1 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R1 0XF9 ;大于A的数先减7
ADDIU R1 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R1 R2
ADDU R6 R1 R6 ;上次的结果加上这次的数
ADDIU R3 0XFF
BNEZ R3 UCONV

	;R1存储地址
ADDIU3 R6 R1 0X0000


MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R3 0x0004
	LI R6 0x00ff 
  AND R3 R6 
	NOP

LI R0 0X0020
CMP R0 R3
BTNEZ GOTOBEGINU
NOP

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0020
SW R0 R6 0X0006



LI R3 0X04
LI R6 0X0000
UCONVNUM:
SLL R6 R6 0X04 ;R6左移1位
MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R4 0X00
LI R2 0X7F
AND R4 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R4 0X0006
LI R2 0X41 
SLTU R4 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R4 0XF9 ;大于A的数先减7
ADDIU R4 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R4 R2
ADDU R6 R4 R6 ;上次的结果加上这次的数
ADDIU R3 0XFF
BNEZ R3 UCONVNUM

;R2保存个数
ADDIU3 R6 R2 0X0000



MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R3 0x0004
	LI R6 0x00ff 
  AND R3 R6 
	NOP

LI R0 0X000D
CMP R0 R3
BTNEZ GOTOBEGINU
NOP
	

	
		;循环发出	
	
UASMLOOP:	

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0024
SW R0 R6 0X0006

	
	
	LW R1 R3 0x0000    ;R3为内存数据	


;SEND R3
ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0000
SRA R4 R4 0X0004
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0000
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
SRA R4 R4 0X0004
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006

ADDIU3 R3 R4 0X0000
LI R5 0X000F
AND R4 R5 
LI R5 0X0030
LI R6 0X000A
SLTU R4 R6
BTNEZ 0X0005
NOP
NOP
ADDIU R5 0X0007
NOP
NOP
NOP
ADDU R5 R4 R5
LI R6 0X00BF
SLL R6 R6 0X0000
SW R6 R5 0X0006	


LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000D
SW R0 R6 0X0006


	ADDIU R1 0x0001   ;R1=地址加加加
	ADDIU R2 0xFFFF
	NOP
	BNEZ R2 UASMLOOP
	NOP	

	B BEGIN
	NOP

GOTOBEGINU:
 NOP
 B BEGIN
 NOP
			
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
;连续执行
COMPILE:
LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X000A
SW R0 R6 0X0006

LI R6 0X000D
SW R0 R6 0X0006


LI R0 0X00BF
SLL R0 R0 0X0000
LI R6 0X0040
SW R0 R6 0X0006

LI R3 0X04
LI R6 0X0000
GCONV:
SLL R6 R6 0X04 ;R6左移1位
MFPC R7 
ADDIU R7 0X03
NOP
B TESTR
NOP
LI R2 0XBF ;要读取的地址
SLL R2 R2 0X00
ADDIU R2 0X04
LW R2 R1 0X00
LI R2 0X7F
AND R1 R2 ;截后7位
LI R2 0X00BF
SLL R2 R2 0X0000
SW R2 R1 0X0006
LI R2 0X41 
SLTU R1 R2 ;跟A的ascii比
BTNEZ 0X01 ;小于A就跳走
ADDIU R1 0XF9 ;大于A的数先减7
ADDIU R1 0XE0 ;减掉0的ascii
LI R2 0X0F
AND R1 R2
ADDU R6 R1 R6 ;上次的结果加上这次的数
ADDIU R3 0XFF
BNEZ R3 GCONV


	;R6已保存内存地址

MFPC R7
	ADDIU R7 0x0003	
	NOP	
	B TESTR	
	NOP
	LI R0 0x00BF 
	SLL R0 R0 0x0000 
	LW R0 R3 0x0004
	LI R0 0x00ff 
  AND R3 R0 
	NOP

LI R1 0X000D
CMP R1 R3
BTNEZ GOTOBEGING	
NOP
	

	
	
	LI R7 0x00BF
	SLL R7 R7 0x0000
	ADDIU R7 0x0010
	
	LW R7 R5 0x0005
	ADDSP 0xFFFF
	SW_SP R5 0x0000
	
	
	;中断保存在R5中
	MFIH R5
	LI R1 0x0080
	SLL R1 R1 0x000
	OR R5 R1
	
	
	
	;恢复现场
	LW R7 R0 0x0000
	LW R7 R1 0x0001
	LW R7 R2 0x0002
	LW R7 R3 0x0003
	LW R7 R4 0x0004
	
	
	
	MFPC R7
	ADDIU R7 0x0004
	MTIH R5    ;IH高位赋1	
	JR R6
	LW_SP R5 0x0000  ;R5恢复现场
	
	;用户程序执行完毕，返回kernel，保存现场
	NOP
	NOP
	ADDSP 0x0001
	LI R7 0x00BF
	SLL R7 R7 0x0000
	ADDIU R7 0x0010
	
	SW R7 R0 0x0000
	SW R7 R1 0x0001
	SW R7 R2 0x0002
	SW R7 R3 0x0003
	SW R7 R4 0x0004
	SW R7 R5 0x0005
	
	;IH高位赋0
	MFIH R0
	LI R1 0x007F
	SLL R1 R1 0x0000
	LI R2 0x00FF
	OR R1 R2	
	AND R0 R1
	MTIH R0
	
	;给终端发送结束用户程序提示
	;LI R1 0x0007
	;MFPC R7
	;ADDIU R7 0x0003	
	;NOP
	;B TESTW	
	;NOP	
	;LI R6 0x00BF 
	;SLL R6 R6 0x0000 ;R6=0xBF00	
	;SW R6 R1 0x0000		
	B BEGIN
	NOP	
		
	
GOTOBEGING:
 NOP
 B BEGIN
 NOP
	




	
