;循环等待读串口
TESTRSER:
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0002
	AND R0 R6 
	BEQZ R0 TESTRSER   ;BF01&2=0  则等待	
	NOP	
	JR R7
	NOP 	
	
;判断串口是否可读
CHECKRSER:
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0002
	AND R6 R0 
	JR R7
	NOP

;判断PS2是否可读
CHECKRPS2:
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0005 
	LW R6 R0 0x0000 
	LI R6 0x0002
	AND R6 R0 
	JR R7
	NOP
	
;循环等待写串口
TESTWSER:
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0001
	AND R0 R6 
	BEQZ R0 TESTWSER   ;BF01&2=0  则等待	
	NOP	
	JR R7
	NOP 	

;判断串口是否可写
CHECKWSER:
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0001
	AND R6 R0 
	JR R7
	NOP
	
;清空vga一整行
CLEARLINE:
	LI R2 0x0010  ;回退字符数量 可根据实际修改

	LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00	
	LI R1 0x0008	;退格
CLEARLINELOOP:	
	SW R6 R1 0x0006
	
	ADDIU R2 0xFFFF
	BNEZ R2 CLEARLINELOOP
	NOP
	JR R7
	NOP
	
;双机通讯
;R5用来表示当前正在屏幕上的字符有多少个
COMUNICATION:
	LI R5 0x0000;本机写缓冲区初始化
	NOP
	;循环读入对面串口发来的消息
TESTRECV:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B CHECKRSER
	NOP
	BEQZ R6 UPDATE_BUFFER
	NOP
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B CLEARLINE
	NOP
TESTRECV_LOOP: ;我不知道汇编器是否支持下划线
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R1 0x0000
	LI R6 0x00FF
	AND R1 R6 ;避免高八位带来的影响
	NOP	
	;R1为对方发来的字符
	;检测是否为结束命令		
	LI R0 0x00FF
	CMP R0 R1
	NOP
	BTEQZ COMUNEND
	NOP
	;写入到vga
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	;LI R0 0x004F
	SW R6 R1 0x0006
	
	;检测是否为enter
	LI R0 0x000D
	CMP R0 R1
	NOP
	BTEQZ TESTRECV_END
	NOP	
	B UPDATE_BUFFER
	NOP
	
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B TESTRECV
	NOP
	B TESTRECV_LOOP
	NOP
;接收信息完成 将自己的缓存区内容写回到屏幕的当前行
TESTRECV_END:
	LI R2 0x0000
	LI R0 0x00BF
	SLL R0 R0 0x0000
	ADDIU R0 0x0020
	
TESTRECV_END_LOOP:
	ADDIU R2 0x0001
	ADDU R0 R2 R1
	LW R1 R1 0x0000
	;写入到vga
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0006
	CMP R2 R5
	NOP
	BNEZ TESTRECV_END_LOOP
	NOP

;测试是否可以发送信息
UPDATE_BUFFER:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	;跳转到判断ps2是否可读写(看看同良是否写了这部分函数可以直接用的)
	B CHECKRPS2
	NOP
	BEQZ R6 TESTSEND
	NOP
	LI R0 0x00BF
	SLL R0 R0 0x0000
	ADDIU R0 0x0020
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R1 0x0004
	LI R6 0x00FF
	AND R1 R6 
	ADDIU R5 0x0001
	ADDU R0 R5 R2
	SW R2 R1 0x0000
	
TESTSEND:
	LI R0 0x00BF
	SLL R0 R0 0x0000
	ADDIU R0 0x0020
	ADDU R0 R5 R2
	LW R2 R1 0x0000
	
	;检测是否为结束命令		
	LI R0 0x00FF
	CMP R0 R1
	NOP
	BTEQZ SEND_ENDMSG
	NOP
	
	;检测是否为enter
	LI R0 0x000D
	CMP R0 R1
	NOP
	BTEQZ SENDMSG
	NOP	
	B TESTRECV
	NOP
	
	
	
	
SENDMSG:
	LI R2 0x0000
	LI R3 0x00BF ;使用R3以避免与子程序寄存器冲突，省去保存寄存器步骤
	SLL R3 R3 0x0000
	ADDIU R3 0x0020
	
SENDMSG_LOOP:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B TESTWSER
	NOP
	
	ADDU R3 R2 R1
	LW R1 R1 0x0000
	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0000
	NOP
	CMP R2 R5
	NOP
	BTEQZ TESTRECV
	NOP
	B SENDMSG
	NOP

SEND_ENDMSG:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B TESTWSER
	NOP
	LI R1 0x00FF
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0000
;会话结束 回到主界面
COMUNEND:	
	;这里应该针对vga有一些操作使得其返回主界面
	B BEGIN
	NOP
	