
GOTOBEGIN_COMM:
	NOP
	B BEGIN
	NOP


;循环等待读串口
TESTRSER:	;用了R0 R6
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0002
	AND R0 R6 
	BEQZ R0 TESTRSER   ;BF01&2=0  则等待	
	NOP	
	JR R7
	NOP 	
	
;判断串口是否可读
CHECKRSER:	;用了R0 R6
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0002
	AND R6 R0 
	JR R7
	NOP

;判断PS2是否可读
CHECKRPS2:	;用了R0 R6
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0005 
	LW R6 R0 0x0000 
	LI R6 0x0002
	AND R6 R0 
	JR R7
	NOP
	
;循环等待写串口
TESTWSER:	;用了R0 R6
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0001
	AND R0 R6 
	BEQZ R0 TESTWSER   ;BF01&2=0  则等待	
	NOP	
	JR R7
	NOP 	

;判断串口是否可写
CHECKWSER:	;用了R0 R6
	NOP	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	ADDIU R6 0x0001 
	LW R6 R0 0x0000 
	LI R6 0x0001
	AND R6 R0 
	JR R7
	NOP
	
;清空vga一整行
CLEARLINE:	;用了R0 R2 R6
	LI R2 0x0020  ;回退字符数量 可根据实际修改

	LI R6 0x00BF 
	SLL R6 R6 0x0000 ;R6=BF00	
	LI R0 0x0008	;退格
CLEARLINELOOP:	
	SW R6 R0 0x0006
	
	ADDIU R2 0xFFFF
	BNEZ R2 CLEARLINELOOP
	NOP
	JR R7
	NOP

;建立连接	
TOCONNECT:
	LI R6 0x00BF
	SLL R6 R6 0x0000

	LI R1 0x0057	;W
	SW R6 R1 0x0006
	LI R1 0x0061	;a
	SW R6 R1 0x0006
	LI R1 0x0069	;i
	SW R6 R1 0x0006
	LI R1 0x0074	;t
	SW R6 R1 0x0006
	LI R1 0x0069	;i
	SW R6 R1 0x0006
	LI R1 0x006E	;n
	SW R6 R1 0x0006
	LI R1 0x0067	;g
	SW R6 R1 0x0006
	LI R1 0x002E	;.
	SW R6 R1 0x0006
	LI R1 0x002E	;.
	SW R6 R1 0x0006
	LI R1 0x002E	;.
	SW R6 R1 0x0006
	LI R1 0x000D	;enter
	SW R6 R1 0x0006

CONNECTLOOP:
	MFPC R7
	ADDIU R7 0x0003	
	NOP
	B TESTRSER
	NOP

	LI R0 0x00BF
	SLL R0 R0 0x0000
	;read serial into r1
	LW R0 R1 0x0000
	
	;if recv "10000000" then begin communication
	LI R2 0x0080
	CMP R1 R2
	BTEQZ COMMUNICATION_WELCOME
	NOP
	B CONNECTLOOP
	NOP

COMMUNICATION_WELCOME:
	LI R6 0x00BF
	SLL R6 R6 0x0000
	
	LI R1 0x0043	;C
	SW R6 R1 0x0006
	LI R1 0x006F	;o
	SW R6 R1 0x0006
	LI R1 0x006E	;n
	SW R6 R1 0x0006
	LI R1 0x006E	;n
	SW R6 R1 0x0006
	LI R1 0x0065	;e
	SW R6 R1 0x0006
	LI R1 0x0063	;c
	SW R6 R1 0x0006
	LI R1 0x0074	;t
	SW R6 R1 0x0006
	LI R1 0x0065	;e
	SW R6 R1 0x0006
	LI R1 0x0064	;d
	SW R6 R1 0x0006
	LI R1 0x000D	;enter
	SW R6 R1 0x0006
	
;双机通讯
;R5用来表示当前正在屏幕上的字符有多少个
COMMUNICATION:
	LI R5 0x0000;本机写缓冲区初始化
	NOP

TESTRECV:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B CHECKRSER
	NOP
	BEQZ R6 UPDATE_BUFFER
	NOP
	
	;开始准备连续读对面发来的信息
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B CLEARLINE
	NOP
	
	;对面的信息前加一个'>'标识符
	LI R6 0x00BF
	SLL R6 R6 0x0000
	LI R1 0x003E	;>
	SW R6 R1 0x0006	
	
;循环读入对面串口发来的消息
TESTRECV_LOOP:
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R1 0x0000
	LI R6 0x00FF
	AND R1 R6 ;避免高八位带来的影响
	NOP	
	;R1为对方发来的字符
	;检测是否为结束命令		
	LI R0 0x00FF
	CMP R0 R1
	NOP
	BTEQZ COMUNEND
	NOP
	;写入到vga
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	;LI R0 0x004F
	SW R6 R1 0x0006
	
	;检测是否为enter
	LI R0 0x000D
	CMP R0 R1
	NOP
	BTEQZ TESTRECV_END
	NOP	
	
	;不为enter继续接受字符,注意此处要循环等，退出循环条件只有“对面发来enter”
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B TESTRSER
	NOP
	B TESTRECV_LOOP
	NOP
	
;接收信息完成 将自己的缓存区内容写回到屏幕的当前行
TESTRECV_END:
	LI R2 0x0000
	LI R0 0x00BF
	SLL R0 R0 0x0000
	ADDIU R0 0x0020	;R0 = BF20
	
TESTRECV_END_LOOP:
	CMP R2 R5
	NOP
	BTEZ UPDATE_BUFFER
	NOP

	ADDIU R2 0x0001	;start at 1
	ADDU R0 R2 R1
	LW R1 R1 0x0000
	;写入到vga
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0006
	B TESTRECV_END_LOOP
	NOP

;测试键盘是否有输入
UPDATE_BUFFER:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	;跳转到判断ps2是否可读写(看看同良是否写了这部分函数可以直接用的)
	B CHECKRPS2
	NOP
	;BEQZ R6 TESTSEND
	BEQZ R6 TESTRECV	;跳回开头，不重置R5
	NOP
	;从键盘拿数据to R1
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	LW R6 R1 0x0004
	LI R6 0x00FF
	AND R1 R6 
	
	;存到缓存区
	LI R0 0x00BF
	SLL R0 R0 0x0000
	ADDIU R0 0x0020
	ADDIU R5 0x0001	;R5 start at 1
	ADDU R0 R5 R2
	SW R2 R1 0x0000
	
	;放上VGA
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0006	
	
TESTSEND:
	;数据还在R1
	;LI R0 0x00BF
	;SLL R0 R0 0x0000
	;ADDIU R0 0x0020
	;ADDU R0 R5 R2
	;LW R2 R1 0x0000
	
	;检测是否为结束命令		
	LI R0 0x001B	;Esc
	CMP R0 R1
	NOP
	BTEQZ SEND_ENDMSG
	NOP
	
	;检测是否为enter
	LI R0 0x000D
	CMP R0 R1
	NOP
	BTEQZ SENDMSG
	NOP	
	B TESTRECV
	NOP
	
	
	
	
SENDMSG:
	LI R2 0x0000
	LI R3 0x00BF ;使用R3以避免与子程序寄存器冲突，省去保存寄存器步骤
	SLL R3 R3 0x0000
	ADDIU R3 0x0020
	
SENDMSG_LOOP:	
	;若发完，回到最开始
	CMP R2 R5
	NOP
	BTEQZ COMMUNICATION	;发完一行R5变回0
	NOP
	ADDIU R2 0x0001

	MFPC R7
	ADDIU R7 0x0003
	NOP
	B TESTWSER
	NOP

	ADDU R3 R2 R1
	LW R1 R1 0x0000
	
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0000
	NOP
	B SENDMSG_LOOP
	NOP

SEND_ENDMSG:
	MFPC R7
	ADDIU R7 0x0003
	NOP
	B TESTWSER
	NOP
	LI R1 0x00FF
	LI R6 0x00BF 
	SLL R6 R6 0x0000 
	SW R6 R1 0x0000
;会话结束 回到主界面
COMUNEND:	

	LI R6 0x00BF
	SLL R6 R6 0x0000

	LI R1 0x000D	;enter
	SW R6 R1 0x0006
	LI R1 0x0044	;D
	SW R6 R1 0x0006
	LI R1 0x0068	;i
	SW R6 R1 0x0006
	LI R1 0x0073	;s
	SW R6 R1 0x0006
	LI R1 0x0063	;c
	SW R6 R1 0x0006
	LI R1 0x006F	;o
	SW R6 R1 0x0006
	LI R1 0x006E	;n
	SW R6 R1 0x0006
	LI R1 0x006E	;n
	SW R6 R1 0x0006
	LI R1 0x0065	;e
	SW R6 R1 0x0006
	LI R1 0x0063	;c
	SW R6 R1 0x0006
	LI R1 0x0074	;t
	SW R6 R1 0x0006
	LI R1 0x0065	;e
	SW R6 R1 0x0006
	LI R1 0x0064	;d
	SW R6 R1 0x0006
	LI R1 0x000D	;enter
	SW R6 R1 0x0006
	
	B GOTOBEGIN_COMM
	NOP
	